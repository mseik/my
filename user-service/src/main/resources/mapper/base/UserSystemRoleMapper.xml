<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.morelinks.service.micro.inner.user.mapper.UserSystemRoleMapper" >
  <resultMap id="BaseResultMap" type="com.morelinks.feign.micro.inner.user.api.model.UserSystemRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="system_type" property="systemType" jdbcType="TINYINT" />
    <result column="manage_system_id" property="manageSystemId" jdbcType="INTEGER" />
    <result column="roles" property="roles" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, system_type, manage_system_id, roles, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_system_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_system_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.morelinks.feign.micro.inner.user.api.model.UserSystemRole" >
    insert into user_system_role (id, user_id, system_type, 
      manage_system_id, roles, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{systemType,jdbcType=TINYINT}, 
      #{manageSystemId,jdbcType=INTEGER}, #{roles,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
    <selectKey keyProperty="id" order="AFTER" resultType="int" >
      SELECT LAST_INSERT_ID() AS ID
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.morelinks.feign.micro.inner.user.api.model.UserSystemRole" >
    insert into user_system_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="systemType != null" >
        system_type,
      </if>
      <if test="manageSystemId != null" >
        manage_system_id,
      </if>
      <if test="roles != null" >
        roles,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="systemType != null" >
        #{systemType,jdbcType=TINYINT},
      </if>
      <if test="manageSystemId != null" >
        #{manageSystemId,jdbcType=INTEGER},
      </if>
      <if test="roles != null" >
        #{roles,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    <selectKey keyProperty="id" order="AFTER" resultType="int" >
      SELECT LAST_INSERT_ID() AS ID
    </selectKey>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.morelinks.feign.micro.inner.user.api.model.UserSystemRole" >
    update user_system_role
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="systemType != null" >
        system_type = #{systemType,jdbcType=TINYINT},
      </if>
      <if test="manageSystemId != null" >
        manage_system_id = #{manageSystemId,jdbcType=INTEGER},
      </if>
      <if test="roles != null" >
        roles = #{roles,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.morelinks.feign.micro.inner.user.api.model.UserSystemRole" >
    update user_system_role
    set user_id = #{userId,jdbcType=INTEGER},
      system_type = #{systemType,jdbcType=TINYINT},
      manage_system_id = #{manageSystemId,jdbcType=INTEGER},
      roles = #{roles,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    <where >
      id = #{id,jdbcType=INTEGER}
    </where>
  </update>
  <select id="queryPageResult" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from 
    user_system_role
    <where >
      <if test="condition.id != null" >
        and id = #{condition.id,jdbcType=INTEGER}
      </if>
      <if test="condition.userId != null" >
        and user_id = #{condition.userId,jdbcType=INTEGER}
      </if>
      <if test="condition.systemType != null" >
        and system_type = #{condition.systemType,jdbcType=TINYINT}
      </if>
      <if test="condition.manageSystemId != null" >
        and manage_system_id = #{condition.manageSystemId,jdbcType=INTEGER}
      </if>
      <if test="condition.roles != null and condition.roles != ''" >
        and roles = #{condition.roles,jdbcType=VARCHAR}
      </if>
      <if test="condition.createTime != null" >
        and create_time = #{condition.createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="condition.updateTime != null" >
        and update_time = #{condition.updateTime,jdbcType=TIMESTAMP}
      </if>
    </where>
    <if test="page.sort != null and page.sort != ''" >
      ORDER BY ${page.sort} ${page.order}
    </if>
    <if test="page != null" >
      limit #{page.offset}, #{page.limit}
    </if>
  </select>
  <select id="queryPageResultCount" resultType="int" >
    select count(*) from 
    user_system_role
    <where >
      <if test="condition.id != null" >
        and id = #{condition.id,jdbcType=INTEGER}
      </if>
      <if test="condition.userId != null" >
        and user_id = #{condition.userId,jdbcType=INTEGER}
      </if>
      <if test="condition.systemType != null" >
        and system_type = #{condition.systemType,jdbcType=TINYINT}
      </if>
      <if test="condition.manageSystemId != null" >
        and manage_system_id = #{condition.manageSystemId,jdbcType=INTEGER}
      </if>
      <if test="condition.roles != null and condition.roles != ''" >
        and roles = #{condition.roles,jdbcType=VARCHAR}
      </if>
      <if test="condition.createTime != null" >
        and create_time = #{condition.createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="condition.updateTime != null" >
        and update_time = #{condition.updateTime,jdbcType=TIMESTAMP}
      </if>
    </where>
  </select>
</mapper>