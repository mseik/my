<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.morelinks.service.micro.inner.user.mapper.AgentLevelMapper" >
  <resultMap id="BaseResultMap" type="com.morelinks.feign.micro.inner.user.api.model.AgentLevel" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="level_name" property="levelName" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, level, level_name, remark, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from agent_level
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from agent_level
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.morelinks.feign.micro.inner.user.api.model.AgentLevel" >
    insert into agent_level (id, level, level_name, 
      remark, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{levelName,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
    <selectKey keyProperty="id" order="AFTER" resultType="int" >
      SELECT LAST_INSERT_ID() AS ID
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.morelinks.feign.micro.inner.user.api.model.AgentLevel" >
    insert into agent_level
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="levelName != null" >
        level_name,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="levelName != null" >
        #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    <selectKey keyProperty="id" order="AFTER" resultType="int" >
      SELECT LAST_INSERT_ID() AS ID
    </selectKey>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.morelinks.feign.micro.inner.user.api.model.AgentLevel" >
    update agent_level
    <set >
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="levelName != null" >
        level_name = #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.morelinks.feign.micro.inner.user.api.model.AgentLevel" >
    update agent_level
    set level = #{level,jdbcType=INTEGER},
      level_name = #{levelName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    <where >
      id = #{id,jdbcType=INTEGER}
    </where>
  </update>
  <select id="queryPageResult" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from 
    agent_level
    <where >
      <if test="condition.id != null" >
        and id = #{condition.id,jdbcType=INTEGER}
      </if>
      <if test="condition.level != null" >
        and level = #{condition.level,jdbcType=INTEGER}
      </if>
      <if test="condition.levelName != null and condition.levelName != ''" >
        and level_name = #{condition.levelName,jdbcType=VARCHAR}
      </if>
      <if test="condition.remark != null and condition.remark != ''" >
        and remark = #{condition.remark,jdbcType=VARCHAR}
      </if>
      <if test="condition.createTime != null" >
        and create_time = #{condition.createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="condition.updateTime != null" >
        and update_time = #{condition.updateTime,jdbcType=TIMESTAMP}
      </if>
    </where>
    <if test="page.sort != null and page.sort != ''" >
      ORDER BY ${page.sort} ${page.order}
    </if>
    <if test="page != null" >
      limit #{page.offset}, #{page.limit}
    </if>
  </select>
  <select id="queryPageResultCount" resultType="int" >
    select count(*) from 
    agent_level
    <where >
      <if test="condition.id != null" >
        and id = #{condition.id,jdbcType=INTEGER}
      </if>
      <if test="condition.level != null" >
        and level = #{condition.level,jdbcType=INTEGER}
      </if>
      <if test="condition.levelName != null and condition.levelName != ''" >
        and level_name = #{condition.levelName,jdbcType=VARCHAR}
      </if>
      <if test="condition.remark != null and condition.remark != ''" >
        and remark = #{condition.remark,jdbcType=VARCHAR}
      </if>
      <if test="condition.createTime != null" >
        and create_time = #{condition.createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="condition.updateTime != null" >
        and update_time = #{condition.updateTime,jdbcType=TIMESTAMP}
      </if>
    </where>
  </select>
</mapper>